---
tasks:
  lint:
    usage: Run static analysis
    description: |
      Runs golangci-lint using the configuration specified in .golangci.toml
    options:
      fast:
        usage: Only run fast linters
        type: bool
        short: f
      opts:
        private: true
        default:
          when: fast
          value: --fast
    run: go run github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.1 run ${opts} ./...

  test:
    usage: Run the tests
    description: |
      Runs the full test suite using `go test -cover ./...`.
    options:
      all:
        usage: Run all tests and linters
        short: a
        type: bool
        default: false
      fast:
        usage: Only run fast tests
        type: bool
      verbose:
        usage: Run the tests in verbose mode
        short: v
        type: bool
      verbose-string:
        private: true
        default:
          when: verbose
          value: -v
      short-string:
        private: true
        default:
          when: fast
          value: -short
    run:
      - when: all
        task:
          name: lint
          options:
            fast: ${fast}
      - command: go test -cover -race ${verbose-string} ${short-string} ./...

  tidy:
    usage: Clean up and format the repo
    run:
      - go mod tidy
      - go run golang.org/x/tools/cmd/goimports@latest -w .

  release:
    usage: Release the latest version with goreleaser
    options:
      snapshot:
        usage: Release without publishing or validation
        type: bool
      snapshot-flags:
        private: true
        default:
          when: snapshot
          value: --snapshot
    run: |
      header='^## [0-9]+\.[0-9]+\.[0-9]+'
      awk "/${header}/{if(!found){found=1;f=1}else{f=0}} f" CHANGELOG.md |
          goreleaser --rm-dist --release-notes /dev/stdin ${snapshot-flags}
